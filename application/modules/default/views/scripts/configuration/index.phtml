<?php 
$generalConfigurationForm = $this->generalConfigurationForm;
$moduleForm = $this->moduleForm;
?>
<div id="config-tabs">
	<ul>
		<li><a href="#general-config"><?php echo $this->translate('General Configuration');?></a></li>
		<li><a href="#module-config"><?php echo $this->translate('Module Configuration');?></a></li>
	</ul>
	<div id="general-config">
		<form action="<?php echo $generalConfigurationForm->getAction(); ?>"
			method="<?php echo $generalConfigurationForm->getMethod();?>"
			id="frmGeneralConfiguration" class="zend_form">
			<?php echo $generalConfigurationForm->customer_configuration_id->renderViewHelper()?>
			<?php echo $generalConfigurationForm->customer_id->renderViewHelper()?>
			<table>
				<tbody>
					<tr>
						<td><?php echo $generalConfigurationForm->font_type->renderLabel() ?></td>
						<td><?php echo $generalConfigurationForm->font_type->renderViewHelper()?></td>
					</tr>
					<tr>
						<td><?php echo $generalConfigurationForm->font_color->renderLabel() ?></td>
						<td><?php echo $generalConfigurationForm->font_color->renderViewHelper()?></td>
					</tr>
					<tr>
						<td><?php echo $generalConfigurationForm->font_size->renderLabel() ?></td>
						<td><?php echo $generalConfigurationForm->font_size->renderViewHelper()?></td>
					</tr>
					<tr>
						<td><?php echo $generalConfigurationForm->spacing->renderLabel() ?></td>
						<td><?php echo $generalConfigurationForm->spacing->renderViewHelper()?></td>
					</tr>
				</tbody>
			</table>
			<div class="customer_submit"><?php echo $generalConfigurationForm->submit->renderViewHelper().$generalConfigurationForm->reset->renderViewHelper();?></div>
		</form>
	</div>
	<div id="module-config">
		<div id="data-grid">
			<table style="border-spacing: 0; border-collapse: collapse; width: 100%"
				class="pattern-style-b" id="dataGrid">
				<thead>
					<tr>
						<th scope="col"><?php echo $this->translate('Module Name')?></th>
						<th scope="col"><?php echo $this->translate('Screen Name')?></th>
						<th scope="col"><?php echo $this->translate('Visible')?></th>
						<th scope="col"><?php echo $this->translate('Order')?></th>
						<th scope="col"><?php echo $this->translate('Published')?></th>
						<th scope="col"><?php echo $this->translate('Actions')?></th>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td colspan="6" class="dataTables_empty"><?php echo $this->translate('Loading data from server')?></td>
					</tr>
				</tbody>
			</table>
		</div>
		<div id="data-form" style="display: none;">
			<form action="<?php echo $moduleForm->getAction(); ?>"
				method="<?php echo $moduleForm->getMethod();?>"
				id="frmModuleConfiguration" class="zend_form">
				<?php echo $moduleForm->customer_module_id->renderViewHelper()?>
				<?php echo $moduleForm->language_id->renderViewHelper()?>
				<table>
					<tbody>
						<tr>
							<td><?php echo $moduleForm->screen_name->renderLabel() ?></td>
							<td><?php echo $moduleForm->screen_name->renderViewHelper()?></td>
						</tr>
						<tr>
							<td><label for="icon"><?php echo $this->translate('Icon:'); ?></label> </td>
					        <td>
					        	<input id="icon" type="file" name="icon" />
					        	<input id="icon_path" type="hidden" name="icon_path" />
								<img alt="" id="img-icon" />
							</td>
						</tr>
						<tr>
							<td><label for="background_image"><?php echo $this->translate('Background Image:'); ?></label> </td>
					        <td>
					        	<input id="background_image" type="file" name="background_image" />
					        	<input id="background_image_path" type="hidden" name="background_image_path" />
								<img alt="" id="img-background" />
							</td>
						</tr>
						<tr>
							<td><?php echo $moduleForm->visibility->renderLabel() ?></td>
							<td><?php echo $moduleForm->visibility->renderViewHelper()?></td>
						</tr>
					</tbody>
				</table>
				<div class="customer_submit"><?php echo $moduleForm->submit->renderViewHelper().$moduleForm->cancel->renderViewHelper();?></div>
			</form>
		</div>
	</div>
</div>
<script type="text/javascript">
var grid ="";
	$(document).ready(function(){
		$( "#config-tabs" ).tabs();
		$("#frmGeneralConfiguration").validator().submit(function(e){
			if(!e.isDefaultPrevented()){
				var self = this;
				var promptus = false;
				$(document).queue(function(next){
					promptus = new prompt({
						element : $("#config-tabs"),
						reference : self,
						beforeShow : function(){
							this.alternateMessage = this.showLoadingMessage("<?php echo $this->translate('Saving Configuration..');?>");
						}
					});
					next();
				}).queue(function(next){
					$.ajax({
						url : "<?php echo $this->url(array("module"=>"default","controller"=>"configuration","action"=>"save-general-configuration"),"default",true);?>",
						cache : false,
						type : "POST",
						data : $(self).serialize(),
						dataType : "json",
						success : function(json){
							if( json && json.success != undefined ) {
								var customer_configuration = json.success.message;
								$(self).find("#customer_configuration_id").attr("value",customer_configuration.customer_configuration_id);								
								promptus.showSuccessMessage("<?php echo $this->translate('Configuration saved successfully');?>");
								setTimeout(function(){
									next();
								}, 2000);
							} else if( json && json.errors != undefined ){
								if( typeof(json.errors.message) == "string"){
										promptus.showErrorMessage(json.errors.message);
										setTimeout(function(){
											next();
										}, 2000);
								} else {
									$(self).data("validator").invalidate(json.errors);
									next();
								}
							}
						},
						error : next
					});
				}).queue(function(next){
					promptus.close();
					next();
				});
			}
			e.preventDefault();
		});

		grid = dataTable({
			aaSorting: [[ 3, "desc" ]],
			"aoColumns": [
							{ "sName": "m_description" },
							{ "sName": "d_screen_name" },
							{ "sName": "cm_visibility" },
							{ "sName": "cm_order_number" },
							{ "sName": "cm_is_publish" },
							{ "sName": "actions","bSortable": false}
						 ],
			id : $('#dataGrid'),
			filterForm : null,
			sAjaxSource: "<?php echo $this->url(array("module"=>"default","controller"=>"configuration","action"=>"grid"));?>"
		});

		$(document).on("click",".grid_publish",function(e){
	        var self = this; 
			window.currentModulePublishUrl = $(this).attr("href"); 
	        if(!e.isDefaultPrevented()){
	        	var promtus = new prompt({
	            	reference : self,
	                element : "#config-tabs",
	                message : "<?php echo $this->translate('Are you sure you want to publish this Module?')?>",
	                buttons : {
	                    "Yes" : function(self){
	                        var prompt = this;
	                        $(document).queue(function(next){
	                            prompt.showLoadingMessage("<?php echo $this->translate('Please wait while publishing module...')?>");
	                            next();
	                        }).queue(function(next){
	                        	$.ajax({
	                                url: window.currentModulePublishUrl,
	                                cache: false,
	                                type: "GET",
	                                dataType: "json",
	                                success: function(json){
	                                    if(json.success != undefined){ 
	                                    	prompt.showSuccessMessage("<?php echo $this->translate('Module pubished successfully.')?>");
	                                    	setTimeout(function(){
	                                    		prompt.close();
	                                        	grid.fnDraw();
	                                        }, 1000);
	                                    } else if(json.errors != undefined){
	                                        var errorMessage = "<?php echo $this->translate('Unable to publish module error returned:')?><br />";
	                                        errorMessage += json.errors;
	                                    	prompt.showErrorMessage(errorMessage);
	                                    	setTimeout(function(){
	                                    		prompt.close();
	                                        }, 2000);
	                                    }
	                                },
	                                error: function(){
	                                }
	                            }).complete(next); 
	                        });
	                    },
	                    "No"  : function(self){
	                    	this.close();
	                    },
	                }
	            });
	            e.preventDefault();
	        }
	    });

		$(document).on("click",".edit",function(e){
	        var self = this; 
			window.currentEditUrl = $(this).attr("href"); 
	        if(!e.isDefaultPrevented()){
		        var promptus = new prompt({
			        	reference : self,
		                element : "#config-tabs",
			        });
	        	$(document).queue(function(next){
	        		promptus.showLoadingMessage("<?php echo $this->translate('Please wait...')?>");
                    next();
                }).queue(function(next){
	        		$.ajax({
                    	url: window.currentEditUrl,
                        cache: false,
                        type: "GET",
                        dataType: "json",
                        success: function(json){
                        	if(json.success != undefined){ 
                            	// Success Show Record To Edit.
                            	data = json.success;
                            	$("#customer_module_id").attr("value",data["cm_customer_module_id"]);
                            	$("#language_id").attr("value",data["d_language_id"]);
                            	$("#icon_path").attr("value",data["cm_icon"]);
                            	$("#background_image_path").attr("value",data["d_background_image"]);
                            	$("#screen_name").attr("value",data["d_screen_name"]);

								$("#img-icon").attr("src","<?php echo $this->baseUrl()."/"; ?>" + data["cm_icon"]);
								$("#img-background").attr("src","<?php echo $this->baseUrl()."/"; ?>" + data["d_background_image"]);
                            	if(data["cm_visibility"]==1) {
                            		$("#visibility").attr("checked","checked");
                            	} else {
                            		$("#visibility").removeAttr("checked");
                            	}
                            	$("#data-grid").hide();
                            	$("#data-form").show();
	                            setTimeout(function(){
	                            	promptus.close();
	                                grid.fnDraw();
	                            }, 1000);
                            } else if(json.errors != undefined){
	                        	var errorMessage = "<?php echo $this->translate('Unable to edit module error returned:')?><br />";
	                            errorMessage += json.errors;
	                            promptus.showErrorMessage(errorMessage);
	                            setTimeout(function(){
	                            	promptus.close();
	                            }, 2000);
	                        }
                       	}
                	}).complete(next);
                }).queue(function(next){
                	promptus.close();
                    next();
            	});
	      		e.preventDefault();
	    	}
	    });

		$("#frmModuleConfiguration").validator().submit(function(e){
			if(!e.isDefaultPrevented()){
				var self = this;
				var promptus = false;
				$(document).queue(function(next){
					promptus = new prompt({
						element : $("#config-tabs"),
						reference : self,
						beforeShow : function(){
							this.alternateMessage = this.showLoadingMessage("<?php echo $this->translate('Saving Module Configuration..');?>");
						}
					});
					next();
				}).queue(function(next){
					// Upoad Images
					var count = 0;
					$("input[type='file']").each(function(){
						var input = $(this).attr("id");
						if($(this).attr("value") != "")
						{
							$.ajaxFileUpload({
								url:'<?php echo $this->url(array("module"=>"default","controller"=>"configuration","action"=>"upload"),"default",true);?>',
								secureuri:false,
								fileElementId:$(this).attr("id"),
								dataType: 'json',
								data:{upload:$(this).attr("id")},
								success: function (data, status)
								{
									if(data.success != undefined) {
										$("#"+ input + "_path").attr("value",data.success);
									}	
								},
								complete: function(){
									count++;
									if(count==2){
										next();
									}
								}
							});
						} else {
							count++;
							if(count==2){
								next();
							}
						}
					});
				}).queue(function(next){
					// Save Modules
					$.ajax({
						type : "POST",
						cache : false,
						data : $(self).serialize(),
						dataType: 'json',
						url : "<?php echo $this->url(array("module"=>"default","controller"=>"configuration","action"=>"save-module"),"default",true);?>",
						success : function(json){
							if(json.errors != undefined){
								$(self).data("validator").invalidate(json["errors"]);
								next();
							} else if(json.success != undefined){
								promptus.showSuccessMessage("<?php echo $this->translate('Module updated successfully.'); ?>");
								setTimeout(function(){
									grid.fnDraw();
									hideForm();
									next();
								}, 2000);
							}
						},
						error : next
		  			});
				}).queue(function(next){
					promptus.close();
					next();
				});
			}
			e.preventDefault();
		});
	});

	function hideForm() {
		$("#data-grid").show();
    	$("#data-form").hide();
	}
</script>